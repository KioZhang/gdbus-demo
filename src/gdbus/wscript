#! /usr/bin/env python
# encoding: utf-8


from waflib import Logs as logs
from waflib import Utils as utils

def options(opt):
	opt.load('compiler_c gnu_dirs glib2')
	
def configure(ctx):
	ctx.load('compiler_c gnu_dirs glib2')

	ctx.check_cc(lib='m', uselib_store='M', mandatory=True)
	ctx.check_cc(fragment = 'int main () {return 0;}\n', mandatory=True);

	ctx.check_cfg(atleast_pkgconfig_version='0.26')
	ctx.check_cfg(package='glib-2.0', uselib_store='GLIB', args=['glib-2.0 >= 2.24', '--cflags', '--libs'], mandatory=True)
	ctx.define ('OLD_GLIB', int(ctx.check_cfg(modversion='glib-2.0') < '2.36.1' ))
	ctx.check_cfg(package='gio-2.0', uselib_store='GIO', args=['gio-2.0 >= 2.24', '--cflags', '--libs'], mandatory=True)
	ctx.check_cfg(package='gobject-2.0', uselib_store='GOBJECT', args=['--cflags', '--libs'], mandatory=True)

	ctx.env.CFLAGS = ['-ggdb', '-Wall']
	ctx.define('DEBUG',1)


def build(bld):

	if bld.cmd == 'install' and bld.cmd == 'uninstall':
		logs.fatal ("Do not install this crapdemo")

	server = bld.program(
			features = ['c', 'glib2'],
			target = '../../server-gdbus.bin',
			source = bld.path.ant_glob(['server-gdbus.c']),
			uselib = 'M GOBJECT GLIB GIO XML',
			install_path = "${BINDIR}"
		)

	client = bld.program(
			features = ['c', 'glib2'],
			target = '../../client-gdbus.bin',
			source = bld.path.ant_glob(['client-gdbus.c']),
			uselib = 'M GOBJECT GLIB GIO XML',
			install_path = "${BINDIR}"
		)
